xrun(64): 18.09-s011: (c) Copyright 1995-2019 Cadence Design Systems, Inc.
TOOL:	xrun(64)	18.09-s011: Started on Dec 04, 2022 at 17:15:17 CST
xrun
	-64bit
	-gui
	-access r
	instruction_fetch.v
	instr_fetch_test.v
Recompiling... reason: file './instruction_fetch.v' is newer than expected.
	expected: Sun Dec  4 17:03:08 2022
	actual:   Sun Dec  4 17:15:15 2022
file: instruction_fetch.v
        1'h2 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,44|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 44, file: instruction_fetch.v line 4)
        1'h3 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,45|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 45, file: instruction_fetch.v line 4)
        1'h4 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,46|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 46, file: instruction_fetch.v line 4)
        1'h5 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,47|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 47, file: instruction_fetch.v line 4)
        1'h6 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,48|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 48, file: instruction_fetch.v line 4)
        1'h7 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,49|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 49, file: instruction_fetch.v line 4)
        1'h8 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,50|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 50, file: instruction_fetch.v line 4)
        1'h9 : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,51|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 51, file: instruction_fetch.v line 4)
        1'ha : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,52|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 52, file: instruction_fetch.v line 4)
        1'hb : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,53|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 53, file: instruction_fetch.v line 4)
        1'hc : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,54|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 54, file: instruction_fetch.v line 4)
        1'hd : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,55|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 55, file: instruction_fetch.v line 4)
        1'he : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,56|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 56, file: instruction_fetch.v line 4)
        1'hf : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,57|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 57, file: instruction_fetch.v line 4)
        1'hA : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,58|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 58, file: instruction_fetch.v line 4)
        1'hB : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,59|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 59, file: instruction_fetch.v line 4)
        1'hC : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,60|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 60, file: instruction_fetch.v line 4)
        1'hD : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,61|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 61, file: instruction_fetch.v line 4)
        1'hE : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,62|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 62, file: instruction_fetch.v line 4)
        1'hF : hex = 1;
           |
xmvlog: *W,INTOVF (lib/sram.v,63|11): bit overflow during conversion from text [2.5(IEEE)] (1 bits).
(`include file: lib/sram.v line 63, file: instruction_fetch.v line 4)
        initiate();
                 |
xmvlog: *W,TMTPAR (lib/sram.v,171|17): A task enable with no arguments must not include an empty set of parentheses [10.2.2 (IEEE Std 1364-2005)].  The compiler has ignored the parentheses.  Use 'xmhelp xmvlog TMTPAR'  for further information.
(`include file: lib/sram.v line 171, file: instruction_fetch.v line 4)
        checkRAM();
                 |
xmvlog: *W,TMTPAR (lib/sram.v,176|17): A task enable with no arguments must not include an empty set of parentheses [10.2.2 (IEEE Std 1364-2005)].  The compiler has ignored the parentheses.  Use 'xmhelp xmvlog TMTPAR'  for further information.
(`include file: lib/sram.v line 176, file: instruction_fetch.v line 4)
	module worklib.instruction_fetch:v
		errors: 0, warnings: 0
		Caching library 'worklib' ....... Done
	Elaborating the design hierarchy:
		Caching library 'worklib' ....... Done
	Top level design units:
		instr_fetch_test
	Building instance overlay tables: .................... Done
	Generating native compiled code:
		worklib.instruction_fetch:v <0x7a78bf21>
			streams:   4, words:  1172
	Building instance specific data structures.
	Loading native compiled code:     .................... Done
	Design hierarchy summary:
		                  Instances  Unique
		Modules:                277      11
		Resolved nets:            0       1
		Registers:               59      29
		Scalar wires:           253       -
		Expanded wires:          68       5
		Vectored wires:          14       -
		Always blocks:           34       4
		Initial blocks:           8       8
		Cont. assignments:        5      16
		Pseudo assignments:       4       4
		Simulation timescale:  10ps
	Writing initial simulation snapshot: worklib.instr_fetch_test:v

-------------------------------------
Relinquished control to SimVision...
xcelium> 
xcelium> source /vol/cadence2018/XCELIUM1809/tools/xcelium/files/xmsimrc
xcelium> run
Now initializing sram
Addr is written: 00400020
Data is written: 20050001
Addr is written: 00400024
Data is written: 20060064
Addr is written: 00400028
Data is written: 20021000
Addr is written: 0040002c
Data is written: 00421400
Addr is written: 00400030
Data is written: 20470028
Addr is written: 00400034
Data is written: 8c430000
Addr is written: 00400038
Data is written: 00c3202a
Addr is written: 0040003c
Data is written: 10850002
Addr is written: 00400040
Data is written: 00c33022
Addr is written: 00400044
Data is written: ac400000
Addr is written: 00400048
Data is written: 20420004
Addr is written: 0040004c
Data is written: 1447fff9
Addr is written: 00400050
Data is written: ace60000
Addr is written: 10000000
Data is written: 0000000a
Addr is written: 10000004
Data is written: 00000009
Addr is written: 10000008
Data is written: 00000008
Addr is written: 1000000c
Data is written: 000002bc
Addr is written: 10000010
Data is written: 00000005
Addr is written: 10000014
Data is written: 00000006
Addr is written: 10000018
Data is written: 00000190
Addr is written: 1000001c
Data is written: 00000001
Addr is written: 10000020
Data is written: 00000002
Addr is written: 10000024
Data is written: 00000003
Addr is checking: 00400020
Data is checking: 20050001
Addr is checking: 00400024
Data is checking: 20060064
Addr is checking: 00400028
Data is checking: 20021000
Addr is checking: 0040002c
Data is checking: 00421400
Addr is checking: 00400030
Data is checking: 20470028
Addr is checking: 00400034
Data is checking: 8c430000
Addr is checking: 00400038
Data is checking: 00c3202a
Addr is checking: 0040003c
Data is checking: 10850002
Addr is checking: 00400040
Data is checking: 00c33022
Addr is checking: 00400044
Data is checking: ac400000
Addr is checking: 00400048
Data is checking: 20420004
Addr is checking: 0040004c
Data is checking: 1447fff9
Addr is checking: 00400050
Data is checking: ace60000
Addr is checking: 10000000
Data is checking: 0000000a
Addr is checking: 10000004
Data is checking: 00000009
Addr is checking: 10000008
Data is checking: 00000008
Addr is checking: 1000000c
Data is checking: 000002bc
Addr is checking: 10000010
Data is checking: 00000005
Addr is checking: 10000014
Data is checking: 00000006
Addr is checking: 10000018
Data is checking: 00000190
Addr is checking: 1000001c
Data is checking: 00000001
Addr is checking: 10000020
Data is checking: 00000002
Addr is checking: 10000024
Data is checking: 00000003
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Writing to dout: xxxxxxxx
READ Addr FOUND!: 00400024
Writing to dout: 20060064
Simulation complete via $finish(1) at time 40 NS + 0
./instr_fetch_test.v:28         $finish;
xcelium> run
xmsim: *E,RNFNSH: Cannot continue simulation due to a previous $finish.
xcelium> database -open waves -into waves.shm -default
Created default SHM database waves
xcelium> probe -create -shm instr_fetch_test.clk instr_fetch_test.imm16 instr_fetch_test.instruction instr_fetch_test.npc_sel instr_fetch_test.pc
Created probe 1
xcelium> reset
Loaded snapshot worklib.instr_fetch_test:v
xcelium> run
Now initializing sram
Addr is written: 00400020
Data is written: 20050001
Addr is written: 00400024
Data is written: 20060064
Addr is written: 00400028
Data is written: 20021000
Addr is written: 0040002c
Data is written: 00421400
Addr is written: 00400030
Data is written: 20470028
Addr is written: 00400034
Data is written: 8c430000
Addr is written: 00400038
Data is written: 00c3202a
Addr is written: 0040003c
Data is written: 10850002
Addr is written: 00400040
Data is written: 00c33022
Addr is written: 00400044
Data is written: ac400000
Addr is written: 00400048
Data is written: 20420004
Addr is written: 0040004c
Data is written: 1447fff9
Addr is written: 00400050
Data is written: ace60000
Addr is written: 10000000
Data is written: 0000000a
Addr is written: 10000004
Data is written: 00000009
Addr is written: 10000008
Data is written: 00000008
Addr is written: 1000000c
Data is written: 000002bc
Addr is written: 10000010
Data is written: 00000005
Addr is written: 10000014
Data is written: 00000006
Addr is written: 10000018
Data is written: 00000190
Addr is written: 1000001c
Data is written: 00000001
Addr is written: 10000020
Data is written: 00000002
Addr is written: 10000024
Data is written: 00000003
Addr is checking: 00400020
Data is checking: 20050001
Addr is checking: 00400024
Data is checking: 20060064
Addr is checking: 00400028
Data is checking: 20021000
Addr is checking: 0040002c
Data is checking: 00421400
Addr is checking: 00400030
Data is checking: 20470028
Addr is checking: 00400034
Data is checking: 8c430000
Addr is checking: 00400038
Data is checking: 00c3202a
Addr is checking: 0040003c
Data is checking: 10850002
Addr is checking: 00400040
Data is checking: 00c33022
Addr is checking: 00400044
Data is checking: ac400000
Addr is checking: 00400048
Data is checking: 20420004
Addr is checking: 0040004c
Data is checking: 1447fff9
Addr is checking: 00400050
Data is checking: ace60000
Addr is checking: 10000000
Data is checking: 0000000a
Addr is checking: 10000004
Data is checking: 00000009
Addr is checking: 10000008
Data is checking: 00000008
Addr is checking: 1000000c
Data is checking: 000002bc
Addr is checking: 10000010
Data is checking: 00000005
Addr is checking: 10000014
Data is checking: 00000006
Addr is checking: 10000018
Data is checking: 00000190
Addr is checking: 1000001c
Data is checking: 00000001
Addr is checking: 10000020
Data is checking: 00000002
Addr is checking: 10000024
Data is checking: 00000003
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Addr is checking: xxxxxxxx
Data is checking: xxxxxxxx
Writing to dout: xxxxxxxx
READ Addr FOUND!: 00400024
Writing to dout: 20060064
Simulation complete via $finish(1) at time 40 NS + 0
./instr_fetch_test.v:28         $finish;
xcelium> 